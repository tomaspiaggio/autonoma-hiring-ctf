# Before running this, run the following command:
# kubectl create secret generic ssh-host-keys --from-file=id_ed25519=.ssh/id_ed25519 --from-file=id_ed25519.pub=.ssh/id_ed25519.pub
# the public keys are generated the first time you run the project with go run main.go

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce # Assumes a single pod DB, adjust if needed
  resources:
    requests:
      storage: 1Gi # Adjust storage size as needed
  # storageClassName: standard # Uncomment and specify if needed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        fsGroup: 999 # Group ID for postgres user in the standard image
      containers:
        - name: postgres
          image: postgres:15 # Use a specific version
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata # Tells postgres where to store data within the container
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
              subPath: pgdata # Mount a sub-directory of the volume
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP # Only expose internally
---
# --- Emailer Application ---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emailer
  template:
    metadata:
      labels:
        app: emailer
    spec:
      containers:
        - name: emailer
          image: autonomactfregistry.azurecr.io/ctf/emailer:1.0.0
          ports:
            - containerPort: 3000
          env:
            - name: RESEND_API_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RESEND_API_KEY
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DATABASE_URL
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: emailer-service
spec:
  selector:
    app: emailer
  ports:
    - protocol: TCP
      port: 3000 # Port the service exposes
      targetPort: 3000 # Port the container listens on, adjust if needed
  type: ClusterIP # Internal service, reachable via emailer-service:8080
---
# --- SSH Application ---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssh-deployment
spec:
  replicas: 1 # Adjust replicas as needed
  selector:
    matchLabels:
      app: ssh-app
  template:
    metadata:
      labels:
        app: ssh-app
    spec:
      containers:
        - name: ssh-app
          image: autonomactfregistry.azurecr.io/ctf/ssh:1.0.14
          ports:
            - containerPort: 2222 # Default SSH port
          env:
            - name: TERM
              value: "xterm-256color"
            - name: COLORTERM
              value: "truecolor"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DATABASE_URL
            - name: EMAILER_HOST
              value: "http://emailer-service:3000"
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          volumeMounts:
            - name: ssh-host-keys-volume
              mountPath: /app/.ssh
              readOnly: true
      volumes:
        - name: ssh-host-keys-volume
          secret:
            secretName: ssh-host-keys
            defaultMode: 0400
---
apiVersion: v1
kind: Service
metadata:
  name: ssh-service
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-resource-group: "MC_CTF_CTF_brazilsouth"
    service.beta.kubernetes.io/azure-allow-shared-security-rule: "true"
spec:
  selector:
    app: ssh-app
  ports:
    - protocol: TCP
      port: 22 # Port exposed by the LoadBalancer
      targetPort: 2222 # Port the container listens on
  type: LoadBalancer # Exposes the service externally via a cloud provider's load balancer
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ssh
spec:
  podSelector:
    matchLabels:
      app: ssh-app
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 2222
    - protocol: TCP
      port: 22